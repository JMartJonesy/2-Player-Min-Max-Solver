head	1.5;
access;
symbols;
locks
	jem4687:1.5; strict;
comment	@ * @;


1.5
date	2012.11.07.19.10.46;	author jem4687;	state Exp;
branches;
next	1.4;

1.4
date	2012.11.03.02.02.17;	author jem4687;	state Exp;
branches;
next	1.3;

1.3
date	2012.11.02.02.06.05;	author jem4687;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.22.16.46.48;	author jem4687;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.17.21.46.42;	author jem4687;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Pretty up the comments
@
text
@/**
 * Name: TakeawayGame.h
 * Description: The header file for a Takeaway Game.
 *
 * $Id: TakeawayGame.h,v 1.4 2012/11/03 02:02:17 jem4687 Exp jem4687 $
 *
 * Revisions
 * $Log: TakeawayGame.h,v $
 *
 * Revision 1.20  2012/10/29 02:40:02  mal4012
 * Minor comment changes.
 *
 * Revision 1.19  2012/10/25 00:45:24  jem4687
 * Changed findsuccessors to receive a trip
 *
 * Revision 1.18  2012/10/21 18:16:29  mal4012
 * Changed comments.
 *
 * Revision 1.17  2012/10/16 02:28:28  jem4687
 * changed findsuccessor params
 *
 * Revision 1.16  2012/10/15 22:05:03  jem4687
 * added generateBoard
 *
 * Revision 1.15  2012/10/15 21:40:40  jem4687
 * added triple container
 *
 * Revision 1.14  2012/10/15 18:05:07  mal4012
 * Changed a few formatting issues.
 *
 * Revision 1.13  2012/10/15 17:18:21  jem4687
 * changed pennies to data
 *
 * Revision 1.12  2012/10/10 22:30:06  jem4687
 * included inhetiance
 *
 * Revision 1.11  2012/10/10 20:51:23  jem4687
 * added functions for inheritance
 *
 * Revision 1.10  2012/10/10 20:02:57  jem4687
 * Initial revision
 *
 * Revision 1.9  2012/10/02 19:20:41  jem4687
 * removed include for player since not needed
 *
 * Revision 1.8  2012/10/02 19:13:05  jem4687
 * added comments
 *
 * Revision 1.7  2012/10/01 22:41:42  jem4687
 * testing
 *
 * Revision 1.6  2012/09/27 01:10:12  jem4687
 * remodeling with all functionality in takeaway
 *
 * Revision 1.5  2012/09/27 00:47:35  jem4687
 * debugging
 *
 * Revision 1.4  2012/09/23 21:22:48  jem4687
 * fixed some bugs so it compiles correctly
 *
 * Revision 1.3  2012/09/22 22:00:56  jem4687
 * added print and move functions
 *
 * Revision 1.2  2012/09/22 21:04:08  jem4687
 * Started
 *
 * Revision 1.1  2012/09/22 21:01:57  jem4687
 * Initial revision
 *
 *
 * @@author:Jesse Martinez
 * @@author:Michael Loper
 */

#ifndef TAKEAWAY_H
#define TAKEAWAY_H

#include <string>
#include <iostream>
#include <vector>
#include <utility>
#include "Game.h"

//Typedef for our created triple type.
typedef triple< int, int, std::vector< std::vector<int> > > trip;


class TakeawayGame: public Game
{
	private:
		/** Pair that holds player character and player type */
		std::pair<std::string,std::string> p1;
		std::pair<std::string,std::string> p2;

	public:

		/**
		 * Constructor
 		 *
 		 * Description:  Creates a game of takeaway between the user
		 *               and pc with the initial ammount of pennies
		 *		 received.
 		 *
		 * @@param int      -  A "dummy" int to differentiate the
		 *                    interactive mode from
		 *                    the solver mode.
		 *        apennies -  The initial amount of pennies in the pile.
		 */
		TakeawayGame( int , int apennies );


		/**
		 * Constructor
		 *
		 * Description:  Creates a game of takeaway to be ran in
		 *               solver mode.
		 *
		 * @@param apennies -  The initial amount of pennies in the pile.
		 */
		TakeawayGame( int apennies );

		/**
		 * Name:   generateBoard
		 *
		 * Description: Creates an empty board.  This function is
		 * 		implemnted in the other games.
		 *
		 * @@param b     - The board.
		 */
		void generateBoard( std::vector< std::string > b );

		/**
		 * Name:   move
		 *
		 * Description:  Calls the proper move function based on the
		 * 		 received player number.  Removes the ammount
		 * 		 of pennies the player chose.
		 *
		 * @@param p      - The number representing whose turn it is.
		 */
		void move( const int p );

		/**
		 * Name:  moveHuman
		 *
		 * Description: Asks for user input on how many pennies to
		 * 		take away.
		 *
		 * @@param p    - A string representing either player "X" or "O".
		 *
		 * @@return     The number of pennies chosen.
		 */
		int moveHuman( const std::string p );

		/**
		 * Name: movePC
		 *
		 * Description: Move for PC player calls the solver algorithm
		 * 		to find the best possible move given the
		 *		current successor.
		 *
		 * @@param turn       - Integer to keep track of the turn.
		 *        successor  - The current successor of a takeaway
		 *                     configuration.
		 *
		 * @@return      A triple that holds the best score, the best
		 *              move, and the best board.
		 */
		trip  movePC( const int turn,std::vector< trip > successor );

		/**
		 * Name: findSuccessors
		 *
		 * Description: Generates all possible valid moves.
		 *
		 * @@param b     - The current board, the number of pennies to
		 *		take away, and the number of pennies remaining.
		 *
		 * @@return      A vector of all the successors.
		 */
		std::vector< trip > findSuccessors( trip );

		/**
		 * Name: print
		 *
		 * Description: Prints an "O" to standard output for each
		 * penny left.
		 */
		void print();

		/**
		 * Name: getName
		 *
		 * Description: Returns the name of the player received.
		 *
		 * @@param p     - An integer representing whose turn it is.
		 *
		 * @@return      String representation of the current player.
		 */
		std::string getName( const int ) const;

		/**
		 * Name: checkBaseCase
		 *
		 * Description:  Determines if a base case as been reached.
		 *
		 * @@param check  - A vector of the remaining moves.
		 *
		 * @@return       True iff there are one or less remaining moves.
		 */
		bool checkBaseCase( const std::vector< trip > check ) const;

		/**
		 * Name: baseCase
		 *
		 * Description: Returns a standard base case representation
		 *		for the takeaway game.  For this game it is a
		 *		score of 1 a move of 0 and an empty board.
		 *
		 * @@return      A triple witha score, move, and board.
		 */
		trip baseCase() const;

		/**
		 * Name: invert
		 *
		 * Description: A dummy function to only be used in
		 * Connect3Game.
		 *
		 * @@return      A board.
		 */
		std::vector< std::vector<int> > invert(
		std::vector< std::vector<int> > b );
};

#endif
@


1.4
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: TakeawayGame.h,v 1.11 2012/10/29 02:40:02 mal4012 Exp jem4687 $
d9 2
a10 1
 * Revision 1.11  2012/10/29 02:40:02  mal4012
d13 1
a13 1
 * Revision 1.20  2012/10/25 00:45:24  jem4687
d16 1
a16 1
 * Revision 1.19  2012/10/21 18:16:29  mal4012
d19 1
a19 1
 * Revision 1.18  2012/10/16 02:28:28  jem4687
d22 1
a22 1
 * Revision 1.17  2012/10/15 22:05:03  jem4687
d25 1
a25 1
 * Revision 1.16  2012/10/15 21:40:40  jem4687
d28 1
a28 1
 * Revision 1.15  2012/10/15 18:05:07  mal4012
d31 1
a31 1
 * Revision 1.14  2012/10/15 17:18:21  jem4687
d34 1
a34 1
 * Revision 1.13  2012/10/10 22:30:06  jem4687
d37 1
a37 1
 * Revision 1.12  2012/10/10 20:51:23  jem4687
d40 1
a40 1
 * Revision 1.11  2012/10/10 20:02:57  jem4687
d43 1
a43 1
 * Revision 1.10  2012/10/02 19:20:41  jem4687
d46 1
a46 1
 * Revision 1.9  2012/10/02 19:13:05  jem4687
d49 1
a49 1
 * Revision 1.8  2012/10/01 22:41:42  jem4687
d52 1
a52 1
 * Revision 1.7  2012/09/27 01:10:12  jem4687
d55 1
a55 1
 * Revision 1.6  2012/09/27 00:47:35  jem4687
@


1.3
log
@*** empty log message ***
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
 * $Id: TakeawayGame.h,v 1.7 2012/10/21 18:16:29 mal4012 Exp jem4687 $
d9 2
a10 2
 * Revision 1.7  2012/10/21 18:16:29  mal4012
 * Changed comments.
d12 2
a13 2
 * Revision 1.6  2012/10/21 03:04:07  mal4012
 * Redid comments.
d15 2
a16 14
 * Revision 1.5  2012/10/18 03:22:10  p334-04e
 * works now
 *
 * Revision 1.4  2012/10/18 02:32:52  jem4687
 * WORKS!!!
 *
 * Revision 1.1  2012/10/17 21:46:42  jem4687
 * Initial revision
 *
 * Revision 1.3  2012/10/17 21:43:02  mal4012
 * Added play feature.
 *
 * Revision 1.7  2012/10/17 01:38:41  mal4012
 * Changed base cases.
d18 1
a18 1
 * Revision 1.6  2012/10/16 02:28:28  jem4687
d21 1
a21 4
 * Revision 1.8  2012/10/16 02:25:21  jem4687
 * added a few things to make work with new game(changed findsuccessors)
 *
 * Revision 1.7  2012/10/15 22:05:03  jem4687
d24 1
a24 1
 * Revision 1.6  2012/10/15 21:40:40  jem4687
d27 1
a27 1
 * Revision 1.5  2012/10/15 18:05:07  mal4012
d30 1
a30 1
 * Revision 1.4  2012/10/15 17:18:21  jem4687
d33 1
a33 1
 * Revision 1.3  2012/10/10 22:30:06  jem4687
d36 1
a36 1
 * Revision 1.2  2012/10/10 20:51:23  jem4687
d39 1
a39 1
 * Revision 1.1  2012/10/10 20:02:57  jem4687
d87 1
a87 1
class Takeaway: public Game
d108 1
a108 1
		Takeaway( int , int apennies );
d119 1
a119 1
		Takeaway( int apennies );
d140 1
a140 1
		void move( int p );
d152 1
a152 1
		int moveHuman( std::string p );
d168 1
a168 1
		trip  movePC( int turn,std::vector< trip > successor );
d175 2
a176 2
		 * @@param p     - The number of pennies left in the pile.
		 *        b     - The current board.
d180 1
a180 2
		std::vector< trip > findSuccessors( int p, std::vector<
		std::vector<int> > );
d199 1
a199 1
		std::string getName( int );
d210 1
a210 1
		bool checkBaseCase(std::vector< trip > check);
d221 12
a232 1
		trip baseCase();
@


1.1
log
@Initial revision
@
text
@d1 87
a87 72
// $Id: TakeawayGame.h,v 1.3 2012/10/17 21:43:02 mal4012 Exp jem4687 $
//
// Revisions:
// $Log: TakeawayGame.h,v $
// Revision 1.3  2012/10/17 21:43:02  mal4012
// Added play feature.
//
// Revision 1.7  2012/10/17 01:38:41  mal4012
// Changed base cases.
//
// Revision 1.6  2012/10/16 02:28:28  jem4687
// changed findsuccessor params
//
// Revision 1.8  2012/10/16 02:25:21  jem4687
// added a few things to make work with new game(changed findsuccessors)
//
// Revision 1.7  2012/10/15 22:05:03  jem4687
// added generateBoard
//
// Revision 1.6  2012/10/15 21:40:40  jem4687
// added triple container
//
// Revision 1.5  2012/10/15 18:05:07  mal4012
// Changed a few formatting issues.
//
// Revision 1.4  2012/10/15 17:18:21  jem4687
// changed pennies to data
//
// Revision 1.3  2012/10/10 22:30:06  jem4687
// included inhetiance
//
// Revision 1.2  2012/10/10 20:51:23  jem4687
// added functions for inheritance
//
// Revision 1.1  2012/10/10 20:02:57  jem4687
// Initial revision
//
// Revision 1.10  2012/10/02 19:20:41  jem4687
// removed include for player since not needed
//
// Revision 1.9  2012/10/02 19:13:05  jem4687
// added comments
//
// Revision 1.8  2012/10/01 22:41:42  jem4687
// testing
//
// Revision 1.7  2012/09/27 01:10:12  jem4687
// remodeling with all functionality in takeaway
//
// Revision 1.6  2012/09/27 00:47:35  jem4687
// debugging
//
// Revision 1.4  2012/09/23 21:22:48  jem4687
// fixed some bugs so it compiles correctly
//
// Revision 1.3  2012/09/22 22:00:56  jem4687
// added print and move functions
//
// Revision 1.2  2012/09/22 21:04:08  jem4687
// Started
//
// Revision 1.1  2012/09/22 21:01:57  jem4687
// Initial revision
//
//
//
//
//
//
//
// @@author:Jesse Martinez
// @@author:Michael Loper
d98 4
d105 1
a105 1
		// Pair that holds player character and player type
d110 13
a122 2
		// Creates a game of takeaway between the
		// computer and user with received pennies
d125 9
a133 2
		// Creates a game of takeaway between two
		// computer players with received pennies
d136 19
a154 1
		// Makes a move depending on which player number was reveived
d157 10
a166 2
		// Move for human player
		// @@return integer of how many pennies user wishes to take
d169 27
a195 12
		// Move for pc player
		// @@return pair holding player bestScore(route) and
		//         bestMove(pennies to take)
		triple<int,int,std::vector< std::vector<int> > > movePC(
		int turn,std::vector< triple< int, int, std::vector<
		std::vector<int> > > > successor);

		// Creates all possible successors depending on penny ammount
		// received
		// @@return a vector of possible successors
		std::vector< triple< int, int, std::vector<
		std::vector<int> > > > findSuccessors( int p, std::vector<
d198 6
a203 1
		// Prints out a O for each penny left
d206 9
a214 4
		// @@return ammount of pennies left
		int getPennies();

		// @@return name of received player number
d217 21
a237 9
		//TODO
		bool checkBaseCase(std::vector< triple<int,int,std::vector<
		std::vector<int> > > > check);

		//TODO
		triple<int,int,std::vector< std::vector<int> > > baseCase();

		//TODO
		void generateBoard( std::vector<char> b );
@
